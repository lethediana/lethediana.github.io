<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>项目搭建</title>
    <url>/2023/05/24/Arduino01/</url>
    <content><![CDATA[<div class="note-large notel-blue"><div class="notel-title"><p>1、说在前面</p>
</div><div class="notel-content"><div class="note note-success icon-padding"><i class="note-icon fa-solid fa-check-circle"></i><p>1、需求描述</p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>通过识别指纹开发板控制舵机模拟开门的目的。</p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>温湿度烟雾和指纹模块都可以实现让舵机转动。</p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>同时温湿度和烟雾传感器还能控制蜂鸣器。    </p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>检测火焰使风扇转动实现灭火的功能          </p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>传感器：温湿度传感器、烟雾传感器、指纹模块、光感传感器、舵机、蜂鸣器、风扇灭火模块。</p>
</div>


<div class="note note-success icon-padding"><i class="note-icon fa-solid fa-check-circle"></i><p>2、实现流程</p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>功能一:指纹模块+舵机                     </p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>功能二:温湿度传感器+舵机+蜂鸣器          </p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>功能三:烟雾传感器+舵机+蜂鸣器          </p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>功能四:光感传感器               </p>
</div>
<div class="note note-default icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>功能五:风扇模块                </p>
</div>
准备材料。开始实验。
 </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>2、准备材料</p>
</div><div class="notel-content"><p>使用的材料是：<br>          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>指纹识别模块（带USB转TTL板）</p></p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>舵机（度数可调）</p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>温湿度传感器</p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>光感传感器</p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>烟雾传感器</p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>蜂鸣器</p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块</p>
</div>
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>LED灯</p>
</div>     
          <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>若干根合适长度的杜邦线</p>
</div>    </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>3、指纹调试</p>
</div><div class="notel-content"><p>使用USB转TTL板连接指纹模块和电脑。  </p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>1、Vi模块电源正输入端（红）——TTL板3.3V(注意)</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>2、Tx串行数据输出（黄）——TTL板Rx</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>3、Rx串行数据输入（白）——TTL板Tx</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>4、GND信号地（黑）——TTL板GND</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>5、打开“设备管理器”查看并记录TTL板的端口号。</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>6、运行指纹程序，打开该端口的指纹模块。</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>7、录入指纹速度慢可以取消勾选“显示图像”。<br>（建议录入指纹时，波特率选择57600）。</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>8、录入指纹完成后拔掉TTL板，使用杜邦线连接开发板指纹模块和舵机。</p>
</div> </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>4、线路连接</p>
</div><div class="notel-content"><p>准备合适长度的杜邦线若干。</p>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>1、舵机连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>舵机（红色） 线为电源线 —— 开发板5V接口（供电）</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>舵机（棕黑色）线为地线 —— 开发板GND接口（地线）</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>舵机（橙黄色）线为信号线 —— 开发板9号口（信号）</p>
</div>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>2、指纹模块连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>指纹模块（红色绿色）线延长接成1根线 —— 开发板3.3V口（供电）</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>指纹模块（黑色）线 —— 开发板GND接口（地线）</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>指纹模块（黄色）线 —— 开发板数字2号口（串行数据输出）</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>指纹模块（白色）线 —— 开发板数字3号口（串行数据输入）</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>指纹模块（蓝色）线 —— 开发板数字4号口（感应信号输出）</p>
</div>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>3、温湿度模块连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>温湿度模块S引脚 —— 开发板模拟口</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>温湿度模块VCC引脚 —— 开发板VCC引脚</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>温湿度模块GND引脚 —— 开发板GND引脚</p>
</div>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>4、光感模块连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>光感模块S引脚 —— 开发板模拟口</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>光感模块VCC引脚 —— 开发板VCC引脚</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>光感模块GND引脚 —— 开发板GND引脚</p>
</div>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>5、烟雾模块连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>烟雾模块S引脚 —— 开发板模拟口</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>烟雾模块VCC引脚 —— 开发板VCC引脚</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>烟雾模块GND引脚 —— 开发板GND引脚</p>
</div>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>6、蜂鸣器模块连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>蜂鸣器模块数字引脚 —— 开发板数字引脚</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>蜂鸣器模块GND引脚 —— 开发板GND引脚</p>
</div>
<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>7、风扇模块连接步骤：</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块GND —— 开发板GND</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块VCC —— 开发板VCC</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块数字引脚A —— 开发板数字引脚7</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块数字引脚B —— 开发板数字引脚8</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块火焰模拟口 —— 开发板模拟口</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块火焰模拟VCC —— 开发板VCC</p>
</div>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>风扇模块火焰模拟GND —— 开发板GND</p>
</div> </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>5、代码实现</p>
</div><div class="notel-content"><div class="note note-red icon-padding"><i class="note-icon fa-solid fa-bolt"></i><p>1、把开发板连接电脑，选择开发板的端口（工具→端口→选择端口），复制以下代码进Arduino程序。</p>
</div>
<div class="note note-red icon-padding"><i class="note-icon fa-solid fa-bolt"></i><p>2、如果缺少库文件，就在“工具→管理库”里面搜索添加提示缺失的库即可。</p>
</div>
<div class="note note-red icon-padding"><i class="note-icon fa-solid fa-bolt"></i><p>3、左上角√图标编译验证没问题，就可以上传→至开发板内了。</p>
</div>
<div class="note note-red icon-padding"><i class="note-icon fa-solid fa-bolt"></i><p>4、源代码实现 (代码还须根据实际进行修改和调整)</p>
</div> </div></div>


<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;DFRobot_DHT11.h&gt;</span><br><span class="line">DFRobot_DHT11 DHT;</span><br><span class="line">#define DHT11_PIN A2                  // 对应的是A0引脚</span><br><span class="line">#include &lt;Adafruit_Fingerprint.h&gt;  //声明调用Adafruit_Fingerprint.h库  指纹</span><br><span class="line">#include &lt;Servo.h&gt;    // 声明调用Servo.h库  舵机</span><br><span class="line">Servo myservo;        // 创建一个舵机对象</span><br><span class="line">int pos = 0;          // 变量pos用来存储舵机位置</span><br><span class="line">const int servoDelay = 15;</span><br><span class="line">const int servoStop  = 2000;</span><br><span class="line">const int lowPowerRate = 1;</span><br><span class="line">const int checkDelay = 1000;</span><br><span class="line">const int debug = 0;</span><br><span class="line">int beep = 6;//定义数字口6控制蜂鸣器</span><br><span class="line">int red = 5;//定义数字口5</span><br><span class="line">/*光感*/</span><br><span class="line">#define lightR A0</span><br><span class="line">#define LED 13</span><br><span class="line">/*光感*/</span><br><span class="line"></span><br><span class="line">SoftwareSerial mySerial(2, 3);//黄色串行数据输出&amp;&amp;白色串行数据输入接口（可修改范围A0~A5，2~13）</span><br><span class="line">Adafruit_Fingerprint finger = Adafruit_Fingerprint(&amp;mySerial);</span><br><span class="line">void setup()</span><br><span class="line">&#123;</span><br><span class="line">  pinMode(7, OUTPUT);</span><br><span class="line">  pinMode(8, OUTPUT);</span><br><span class="line">  pinMode(LED,OUTPUT);    //设置连接小灯的引脚为输出模式</span><br><span class="line">  pinMode(lightR,INPUT);</span><br><span class="line">  pinMode(beep,OUTPUT);//设置数字6引脚为输出模式 </span><br><span class="line">  pinMode(red,OUTPUT);//设置数字6引脚为输出模式 </span><br><span class="line">  myservo.attach(9); //舵机信号端口（可修改范围A0~A5，2~13）</span><br><span class="line">  myservo.write(0);</span><br><span class="line">  Serial.begin(9600);</span><br><span class="line">  Serial.println(&quot;Demo Start&quot;);</span><br><span class="line">  while (!Serial);  // For Yun/Leo/Micro/Zero/...</span><br><span class="line">  delay(100);</span><br><span class="line">  Serial.println(&quot;\n\nAdafruit finger detect test&quot;);</span><br><span class="line">  finger.begin(57600);//设置传感器串行端口的数据速率</span><br><span class="line">  delay(5);</span><br><span class="line">  if (finger.verifyPassword()) &#123;</span><br><span class="line">    Serial.println(&quot;Found fingerprint sensor!&quot;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    Serial.println(&quot;Did not find fingerprint sensor :(&quot;);</span><br><span class="line">    while (1) &#123; delay(1); &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(F(&quot;Reading sensor parameters&quot;));</span><br><span class="line">  finger.getParameters();</span><br><span class="line">  Serial.print(F(&quot;Status: 0x&quot;)); Serial.println(finger.status_reg, HEX);</span><br><span class="line">  Serial.print(F(&quot;Sys ID: 0x&quot;)); Serial.println(finger.system_id, HEX);</span><br><span class="line">  Serial.print(F(&quot;Capacity: &quot;)); Serial.println(finger.capacity);</span><br><span class="line">  Serial.print(F(&quot;Security level: &quot;)); Serial.println(finger.security_level);</span><br><span class="line">  Serial.print(F(&quot;Device address: &quot;)); Serial.println(finger.device_addr, HEX);</span><br><span class="line">  Serial.print(F(&quot;Packet len: &quot;)); Serial.println(finger.packet_len);</span><br><span class="line">  Serial.print(F(&quot;Baud rate: &quot;)); Serial.println(finger.baud_rate);</span><br><span class="line">  finger.getTemplateCount();</span><br><span class="line">  if (finger.templateCount == 0) &#123;</span><br><span class="line">    Serial.print(&quot;Sensor doesn&#x27;t contain any fingerprint data. Please run the &#x27;enroll&#x27; example.&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    Serial.println(&quot;Waiting for valid finger...&quot;);</span><br><span class="line">    Serial.print(&quot;Sensor contains &quot;); Serial.print(finger.templateCount); Serial.println(&quot; templates&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void loop()                     // run over and over again</span><br><span class="line">&#123;</span><br><span class="line">  huoyanbaojing();</span><br><span class="line">  wenshiducaiji();</span><br><span class="line">  fengshan();</span><br><span class="line">  Serial.println(&quot;Voltage in 4&quot;); </span><br><span class="line">  Serial.println(digitalRead(4));</span><br><span class="line">  if(!lowPowerRate || digitalRead(4) == HIGH) &#123;</span><br><span class="line">    getFingerprintID();</span><br><span class="line">  &#125;</span><br><span class="line">  delay(checkDelay);            //don&#x27;t ned to run this at full speed.</span><br><span class="line">  guanggan();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void openAndReset()&#123;</span><br><span class="line">  for(pos = 0; pos &lt; 90; pos += 1)&#123;    // 舵机从0°转到180°，每次增加1°          </span><br><span class="line">    myservo.write(pos);       // 给舵机写入角度   </span><br><span class="line">    delay(servoDelay);                    // 延时15ms让舵机转到指定位置</span><br><span class="line">  &#125;</span><br><span class="line">  delay(servoStop);</span><br><span class="line">  for(pos = 90; pos&gt;=1; pos-=1) &#123;    // 舵机从180°转回到0°，每次减小1°                               </span><br><span class="line">    myservo.write(pos);        // 写角度到舵机     </span><br><span class="line">    delay(servoDelay);                 // 延时15ms让舵机转到指定位置</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">uint8_t getFingerprintID() &#123;</span><br><span class="line">  uint8_t p = finger.getImage();</span><br><span class="line">  switch (p) &#123;</span><br><span class="line">    case FINGERPRINT_OK:</span><br><span class="line">      Serial.println(&quot;Image taken&quot;);</span><br><span class="line">      break;</span><br><span class="line">    case FINGERPRINT_NOFINGER:</span><br><span class="line">      Serial.println(&quot;No finger detected&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    case FINGERPRINT_PACKETRECIEVEERR:</span><br><span class="line">      Serial.println(&quot;Communication error&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    case FINGERPRINT_IMAGEFAIL:</span><br><span class="line">      Serial.println(&quot;Imaging error&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    default:</span><br><span class="line">      Serial.println(&quot;Unknown error&quot;);</span><br><span class="line">      return p;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  p = finger.image2Tz();</span><br><span class="line">  switch (p) &#123;</span><br><span class="line">    case FINGERPRINT_OK:</span><br><span class="line">      Serial.println(&quot;Image converted&quot;);</span><br><span class="line">      break;</span><br><span class="line">    case FINGERPRINT_IMAGEMESS:</span><br><span class="line">      Serial.println(&quot;Image too messy&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    case FINGERPRINT_PACKETRECIEVEERR:</span><br><span class="line">      Serial.println(&quot;Communication error&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    case FINGERPRINT_FEATUREFAIL:</span><br><span class="line">      Serial.println(&quot;Could not find fingerprint features&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    case FINGERPRINT_INVALIDIMAGE:</span><br><span class="line">      Serial.println(&quot;Could not find fingerprint features&quot;);</span><br><span class="line">      return p;</span><br><span class="line">    default:</span><br><span class="line">      Serial.println(&quot;Unknown error&quot;);</span><br><span class="line">      return p;</span><br><span class="line">  &#125;</span><br><span class="line">  p = finger.fingerSearch();</span><br><span class="line">  if (p == FINGERPRINT_OK) &#123;</span><br><span class="line">    Serial.println(&quot;Found a print match!&quot;);</span><br><span class="line">    digitalWrite(beep,LOW);//关闭蜂鸣器</span><br><span class="line">  &#125; else if (p == FINGERPRINT_PACKETRECIEVEERR) &#123;</span><br><span class="line">    Serial.println(&quot;Communication error&quot;);</span><br><span class="line">    return p;</span><br><span class="line">  &#125; else if (p == FINGERPRINT_NOTFOUND) &#123;</span><br><span class="line">    digitalWrite(red,HIGH);//提示红灯</span><br><span class="line">    Serial.println(&quot;Did not find a match&quot;);</span><br><span class="line">    digitalWrite(beep,HIGH);//打开蜂鸣器</span><br><span class="line">    delay(1000); </span><br><span class="line">    digitalWrite(beep,LOW);//打开蜂鸣器</span><br><span class="line">    return p;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    Serial.println(&quot;Unknown error&quot;);</span><br><span class="line">    return p;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.print(&quot;Found ID #&quot;); </span><br><span class="line">  Serial.print(finger.fingerID);</span><br><span class="line">  Serial.print(&quot; with confidence of &quot;); </span><br><span class="line">  Serial.println(finger.confidence);</span><br><span class="line">  openAndReset();</span><br><span class="line">  return finger.fingerID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int getFingerprintIDez() &#123;</span><br><span class="line">  uint8_t p = finger.getImage();</span><br><span class="line">  if (p != FINGERPRINT_OK)  return -1;</span><br><span class="line"> </span><br><span class="line">  p = finger.image2Tz();</span><br><span class="line">  if (p != FINGERPRINT_OK)  return -1;</span><br><span class="line"> </span><br><span class="line">  p = finger.fingerFastSearch();</span><br><span class="line">  if (p != FINGERPRINT_OK)  return -1;</span><br><span class="line"> </span><br><span class="line">  // found a match!</span><br><span class="line">  Serial.print(&quot;Found ID #&quot;); </span><br><span class="line">  Serial.print(finger.fingerID);</span><br><span class="line">  Serial.print(&quot; with confidence of &quot;); </span><br><span class="line">  Serial.println(finger.confidence);</span><br><span class="line">  return finger.fingerID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//光感函数</span><br><span class="line">void guanggan()&#123;</span><br><span class="line">  int val=analogRead(lightR);  //读取模拟接口A0的值，也就是14号口，把值赋给val</span><br><span class="line">  Serial.println(&quot;光感模拟量值为：&quot;);  //显示字符串&quot;模拟量值为：&quot;</span><br><span class="line">  Serial.println(val);    //通过串口打印对应的val值，并且通过串口进行显示出来</span><br><span class="line">  delay(1000);//延时1秒</span><br><span class="line">  if(val&gt;100)//判断是否大于设定值</span><br><span class="line">   &#123;</span><br><span class="line">      digitalWrite(LED,HIGH);//点亮led</span><br><span class="line">      //digitalWrite(beep,LOW);//关闭蜂鸣器</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">     digitalWrite(LED,LOW);//关闭led</span><br><span class="line">     //digitalWrite(beep,HIGH);//打开蜂鸣器 </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//可燃检测</span><br><span class="line">void huoyanbaojing()</span><br><span class="line">&#123;</span><br><span class="line">  int vall = analogRead(A1);//读取模拟14口的值 </span><br><span class="line">  Serial.println(&quot;可燃模拟量值为：&quot;);  //显示字符串&quot;模拟量值为：&quot;</span><br><span class="line">  Serial.println(vall);    //读取模拟接口A0的值，并且通过串口进行显示出来</span><br><span class="line">  if(vall&gt;1000)//可以通过调节这个参数来改变火焰检测的阀值</span><br><span class="line">  &#123; </span><br><span class="line">    Serial.print(&quot;环境正常&quot;);</span><br><span class="line">    digitalWrite(red,LOW);//关闭提示灯</span><br><span class="line">    digitalWrite(beep,LOW);//关闭蜂鸣器</span><br><span class="line">  &#125; </span><br><span class="line">  else//否则 </span><br><span class="line">  &#123; </span><br><span class="line">    Serial.print(&quot;环境异常&quot;);</span><br><span class="line">    digitalWrite(red,HIGH);//打开提示灯</span><br><span class="line">    digitalWrite(beep,HIGH);//打开蜂鸣器 </span><br><span class="line">    openAndReset();</span><br><span class="line">    delay(1000);</span><br><span class="line">    digitalWrite(red,LOW);//关闭提示灯</span><br><span class="line">  &#125; </span><br><span class="line">  delay(1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void wenshiducaiji()&#123;</span><br><span class="line">  delay(1000);</span><br><span class="line">  DHT.read(DHT11_PIN);</span><br><span class="line">  float RH = DHT.humidity;   //读取湿度数据                       </span><br><span class="line">  float T = DHT.temperature;       //读取温度数据</span><br><span class="line">  Serial.print(&quot;Humidity:&quot;);  //向串口打印 Humidity:</span><br><span class="line">  Serial.print(RH);           //向串口打印湿度数据</span><br><span class="line">  Serial.print(&quot;%&quot;);</span><br><span class="line">  Serial.print(&quot;  Temperature:&quot;);</span><br><span class="line">  Serial.print(T);            //向串口打印温度数据</span><br><span class="line">  Serial.println(&quot;C&quot;); </span><br><span class="line">  if(T&lt;33)//可以通过调节这个参数来改变火焰检测的阀值</span><br><span class="line">  &#123; </span><br><span class="line">    Serial.print(&quot;温度正常&quot;);</span><br><span class="line">    digitalWrite(red,LOW);//关闭提示灯</span><br><span class="line">    digitalWrite(beep,LOW);//关闭蜂鸣器</span><br><span class="line">  &#125; </span><br><span class="line">  else//否则 </span><br><span class="line">  &#123; </span><br><span class="line">    Serial.print(&quot;温度异常&quot;);</span><br><span class="line">    digitalWrite(red,HIGH);//打开提示灯</span><br><span class="line">    //digitalWrite(beep,HIGH);//打开蜂鸣器</span><br><span class="line">    openAndReset();//开门</span><br><span class="line">    delay(1000);</span><br><span class="line">    digitalWrite(red,LOW);//关闭提示灯</span><br><span class="line">  &#125; </span><br><span class="line">  delay(500);                  //延时1000毫秒</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void fengshan()&#123;</span><br><span class="line">  int valll = analogRead(A3);</span><br><span class="line">  Serial.println(&quot; &quot;);</span><br><span class="line">  Serial.println(&quot;模拟量值为: &quot;);</span><br><span class="line">  Serial.println(valll);</span><br><span class="line">  if (valll &lt; 600) &#123;</span><br><span class="line">    digitalWrite(7,HIGH);</span><br><span class="line">    digitalWrite(8,LOW);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    digitalWrite(7,LOW);</span><br><span class="line">    digitalWrite(8,LOW);</span><br><span class="line">  &#125;</span><br><span class="line">  //delay(500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="note-large notel-blue"><div class="notel-title"><p>风扇模块代码</p>
</div><div class="notel-content"> </div></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void setup()&#123;</span><br><span class="line">  Serial.begin(9600);</span><br><span class="line">  pinMode(7, OUTPUT);</span><br><span class="line">  pinMode(8, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop()&#123;</span><br><span class="line">  int valll = analogRead(A3);</span><br><span class="line">  Serial.println(&quot;模拟量值为: &quot;);</span><br><span class="line">  Serial.println(valll);</span><br><span class="line">  if (valll &lt; 600) &#123;</span><br><span class="line">    digitalWrite(7,HIGH);</span><br><span class="line">    digitalWrite(8,LOW);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    digitalWrite(7,LOW);</span><br><span class="line">    digitalWrite(8,LOW);</span><br><span class="line">  &#125;</span><br><span class="line">  delay(500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="note-large notel-red"><div class="notel-title"><p>补充</p>
</div><div class="notel-content"><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>上述代码还需根据实际整合</p>
</div>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>代码中可能存在错误的地方</p>
</div>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>如有误请自行进行更正代码</p>
</div> </div></div>]]></content>
      <tags>
        <tag>Arduino  物联网</tag>
      </tags>
  </entry>
  <entry>
    <title>赛博朋克</title>
    <url>/2023/05/29/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B/</url>
    <content><![CDATA[<div class="note-large notel-blue"><div class="notel-title"><p>赛博朋克</p>
</div><div class="notel-content"><p>一种科幻流派或视觉美术风格<br>赛博朋克，是“控制论”与“朋克”的合成词。字面意思，就是对”高度机械文明”的反思。该背景大多描绘在未来，建立于“低端生活与高等科技结合”的基础上，拥有先进科学技术，再以一定程度崩坏的社会结构做对比。之后，它从文学向电影、游戏等媒介延伸，催生了赛博朋克文化。同时，它还演变为一种视觉美学风格，被运用到日常生活中的众多领域中 。<br>“赛博朋克”脱胎于在1960-1970年代兴起的科幻小说新浪潮运动。发端于上世纪八十年代。1980年，科幻作家布鲁斯·博斯克创造了这个词，1984年，威廉·吉布森的科幻小说《神经漫游者》将赛博朋克这个词发扬光大，并开启了一种科幻文学类别。拥有五花八门的视觉冲击效果，比如街头的霓虹灯、街排标志性广告以及高楼建筑等，通常搭配色彩是以黑、紫、绿、蓝、红为主，但霓虹灯等只是其中标志，并不是所有霓虹灯相关的都称为赛博朋克 。<br>赛博朋克的情节经常围绕黑客、人工智能及大型企业之间的矛盾而展开。科幻小说家劳仑斯·普尔森曾尝试定义赛博朋克文学运动的内涵和社会思潮——经典的赛博朋克角色是边缘且性格疏远的独行者。他们生活在社会群体的边缘，一个弥漫反乌托邦氛围的未来地球：日常生活受到急剧改变的科技影响，普及的计算机化信息笼罩全球，以及侵入性的人体改造 </p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>文化来源</p>
</div><div class="notel-content"><p>“Cyberpunk”这个单词由cyber（网络）和punk（朋克）组成。cyber的词源是cybernetics（控制论），控制论是20世纪重要的思想运动，奠定了冷战后定量社会科学与信息技术时代。朋克则是起源于二战后英国工人阶级社区的亚文化，躁动反叛的青少年通过音乐、服饰、街头行动反抗一切统治权威。治理与反叛，两个矛盾的概念纠缠在一起。<br>1948，诺伯特·维纳发表了跨学科领域的巨著《控制论：关于在动物和机器中控制和通讯的科学》，创造了控制论（Cybernetics）这一概念。“控制论”源于希腊语kybernētēs，意为“治理”。维纳认为人类社会、生物体和自动化机器都可以看作这样的控制系统，系统通过各个组成部分的信息交换和反馈，来完成自我调节与控制。作为一种方法论，控制论融合了机器与生物的界限，也挑战了人类认知与行为的主体性  。</p>
 </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>文化概念</p>
</div><div class="notel-content"><p>赛博朋克最早作为一种科幻题材出现，最早起源于上世纪六七十年代的新科幻小说潮流，发端于上世纪八十年代，经过长期发展成为了一种亚文化，目前已经不再仅限于科幻小说，而是充分渗透到小说，动漫，电影，游戏，艺术和建筑等多个领域中。在赛博朋克世界里，人成为了不值一提的渺小生物，由于高科技的发展，人与机械的分线开始消失，人工智能的发展诞生了有思想的仿生人，而且人工智能、黑客以及控制财富的大型公司之间产生了冲突，边缘人物则通过高科技来逃避集体意识实现个体的自由，带有反乌托邦的意识。和星际旅行、太空争霸等天马行空式的科幻世界比起来，赛博朋克给人的感觉更为真实，因为它加入了社会矛盾和对人性的思考，反乌托邦和悲观主义色彩都是赛博朋克文化的标签 。<br>赛博朋克最核心的突出特点是“高科技，低生活”（High Tech，Low Life）。字面意思是科技水平高了，但生活质量下降了。从世界观来看，赛博朋克是科技与社会碰撞形成的产物，而且是离现实不远的未来世界，这时候的实体国家通常已经消亡，由垄断公司掌控财富，城市化加剧、社会体系崩塌带来衰败与暴力。通常包含两组反差：视觉层面上，极高的技术水平与极低的生活质量形成反差；故事层面上，强权的科技公司与弱势的底层人民形成反差。在赛博朋克的作品中，一边是闪烁着霓虹灯光的摩天大楼，富人们在此享受生活，但在阴暗的角落里，到处是黑帮、流氓、抢劫犯的身影，穷人们只能靠电子产品来麻痹自己 </p>
 </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>文化背景</p>
</div><div class="notel-content"><p>朋克最初来自于“二战”之后的英国，当时战后英国的失业率上升，经济萧条，社会死气沉沉，一些年轻人通过音乐的形式，用姿态宣泄着心中的怒火。到了20世纪六、七十年代，这种具有反叛精神的朋克文化跨越大西洋，与美国科幻“新浪潮”（New Wave）结合在一起，形成了赛博朋克的雏形。<br>从科幻文学史的角度来看，上世纪40年代到60年代盛行的“黄金年代”科幻文学已经显得乏力。这些作品对科学的乐观想象和对人类未来的乌托邦幻想已经让读者产生了厌倦。科幻新浪潮的适时出现试图让这种垂死的文体焕然一新，引导科幻小说进入了严肃文学的领域。这类科幻文学聚焦的主题与现实息息相关，不再一味歌颂太空探索、外星殖民的美好愿景，而是探索科技的黑暗面，由此逐渐表现为反乌托邦的叙事风格。诞生于这一时期的赛博朋克有着非常强烈的现实关怀，这些科幻作家试图通过作品来对嬉皮士、性解放、迷幻药文化等各种正在发生的社会运动和变革作出回应。他们意识到，追求效率的科技终将带来一个僵化社会，贫富差距不断拉大，整个社会充斥着对人性的压抑。霓虹灯与阴雨，摩天大楼与贫民窟也是赛博朋克的经典意象。例如香港历史上的九龙城寨，就成为了赛博朋克作品中的城市建筑原型  。</p>
 </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>发展历史</p>
</div><div class="notel-content"><p>奠定基调<br>1948年，“控制论之父”诺伯特·维纳首次发表控制论思想之时，引发了一场持续半个世纪之久的思想革命。维纳提出的控制论的根本洞见在于，拥有生物系统的人类，在本质上与机器所共享的一套相似的反馈机制。换言之，人类与机器的行为在理论上是可以达成统一的，人类的智能行为是这套机制的外在表现，而机器也可以像人类一样自我学习和进化。<br>1983年，科幻作家布鲁斯·博斯克创造了“赛博朋克”（cyberpunk）：控制论（cybernetics）和朋克（punk）的合成词。并把该名设定为自己短篇小说的名字，形容迷失的年轻一代：他们是抗拒父母的权威、与主流社会格格不入、利用电脑技术钻漏洞和制造麻烦的技术宅。<br>1982年，经典科幻片《银翼杀手》开创了这种高科技背景与低生活成本杂糅、阴冷压抑的美学风格，继而影响后世众多作品  。同年大友克洋发表了漫画《阿基拉》。之后在1988年改编成动画电影《阿基拉》，并且使得“赛博朋克”这个科幻类别被更多的人知晓。<br>1984年，威廉·吉布森发表了《神经漫游者》，这部囊括科幻文学“大满贯“的经典之作采纳了赛博朋克这个词，并自此开启了一种科幻文学的新类别。在小说中描绘了能联结虚拟电脑数位空间（Cyberspace）的黑客（hacker），这也是后来科幻电影《黑客帝国》（Matrix）的框架雏形 。</p>
 </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>文化符号</p>
</div><div class="notel-content"><p>风格<br>时代背景<br>不久的未来，科技的高速发展改变了社会生活，高智能产品层出不穷，义体人和仿生人屡见不鲜。但是，改变并不意味着改善，大多数人的生活水平并未因此提高。<br>社会背景<br>高等科技导致财富和武力流向科技型寡头企业，社会群落不再以国家和地区划分，而是全都笼罩在由信息技术控制的巨大网络之下，导致社会制度崩坏，贫富差距悬殊。<br>环境背景<br>科技的发展带来自然环境和社会环境的双重破坏，酸雨、沙尘暴、遮天蔽日的乌云，废弃的无人区、拥挤的贫民窟、密集的摩天楼、晦暗的地下城，随处可见 。<br>元素<br>摩天楼<br>赛博朋克里密集而高耸的摩天楼，是未来工业水平的体现，它们占据着高层次的空间地位，同时也暗示着拥有者高不可攀的社会地位。在有些近乎宗教宫殿式的宏伟建筑面前，社会底层的个人力量更显得微不足道。<br>义体人（赛博格）<br>肢体、器官、皮肤，甚至“人”都可以由机械制造，用机体强化人体的“赛博格”，是赛博朋克世界的常客，代表着科幻感和虚幻感。机械的冰冷和人性的温暖，往往在这种混搭的设定中发生置换，从而更加容易触及赛博朋克的实质。<br>义体武器<br>赛博朋克在科技表现上的两大支柱，就是信息网络和生化改造。两者也不是完全分开的，很多时候生化改造的目的就是为了更好地连接网络。如果说《攻壳机动队》和《黑客帝国》是更强调网络这一端，早期的《银翼杀手》更强调生化科技，人造人这一端。<br>朋克时尚<br>赛博朋克也是朋克，所以赛博朋克不会缺少现实中成型的，标榜叛逆的朋克时尚。稍微具体一点，就是无政府朋克这一派的代表元素，包括莫西干头，自由之刺，带钉装饰，皮夹克，长筒靴，纹身等等。其中人们经常将头发染成各种颜色，画上各种彩妆。绿色，蓝色，粉红色等，很多时候也有迷幻和暧昧的色彩。<br>超梦和神经接口<br>尽管已经有全身级别的替换改造，但性质相近的信息接收装置，超梦设备还是表现得比较保守的。更像是强化版的VR。对于虚拟现实可能的危害性，《赛博朋克2077》有了更多的具体想象，算是贴近时代的一面。<br>贫民窟<br>作为富有的对比，贫民窟代表着赛博朋克的底层世界，低下、拥挤、肮脏、混乱。香港的九龙寨城是现实中的典型范例。在动荡的20世纪，在中英的政治博弈中沦为“三不管地带”的九龙寨城，奇迹地发展出自成一体的蛮荒生态，这种社会形态启发了很多的赛博朋克作品。<br>东方元素<br>赛博朋克的世界里有很多的东方文化元素，汉语、日文、艺伎、拉面店等，但这并不是歧视，而是包含西方视角中的东方主义异化感，人类高科技失控的深刻惧怕，以及城市巨大化带来的社会冷漠，赛博朋克的城市或多或少会包含一些有出入的东方元素，不太像真正多元并存的城市，更像是一种突兀的杂糅 。<br>雨<br>赛博朋克世界的天气时常不好，雨水是环境恶劣的一种反映（酸雨）。连绵的雨天，有时用于烘托悲凉的氛围，有时用于呈现错乱的视觉——地上积洼的雨水，倒映着城市上空绚丽的灯光，既是对光源的补充，也延展了这种虚伪的繁华  。<br>人造光<br>由于科技对环境的破坏，赛博朋克的世界里总是黑云密布，导致自然光不足，所以常常用人造光源进行补充；同时，人造光源也用于对科技的展示和信息的传递，比如全息投影、广告屏、霓虹灯……无处不在的人造光源塑造了未来世界的繁华表象，但是也造成了二次污染——光污染。<br>故障艺术<br>现实当中对数码科技的经验，让乱码，卡顿，错位，伪色，声音失真这些设备失灵时的表现，成了一种独有的风格。和《黑客帝国》的字符雨效果类似，赛博朋克的世界，总少不了各种雪花点，伪色，乃至闪烁黑屏。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>文化分析</p>
</div><div class="notel-content"><p>赛博朋克的风格主线，就是反映出科技高度发展的人类文明，与脆弱渺小的人类个体之间的强烈反差，同时外界与内在，钢铁与肉体，过去与未来，现实与虚幻等矛盾在其中交织。看似对立，宿命却连结在一起。赛博朋克作者试图从侦探小说、黑色电影和后现代主义中汲取元素，描绘20世纪最后20年数码化社会不为人知的一面。赛博朋克的反乌托邦世界，被认为是20世纪中叶大部分人所设想的乌托邦未来的对立面。<br>布鲁斯·斯特林这样总结赛博朋克的特质：“待人如待鼠，所有对鼠的措施都可以同等地施加给人。闭上眼拒绝思考并不能使这个惨不忍睹的画面消失。这就是赛博朋克。”<br>赛博朋克文学有着强烈的反乌托邦和悲观主义色彩。他们通常将视角放在未来科技高度发达的大时代下底层小人物上，描写太平盛世表象下社会的腐朽与人性的堕落，对未来做出悲观的预言。但也是在这阴暗的角落将会诞生怀有希望的英雄。在赛博朋克文学中，大多故事发生在网络上、数码空间中。现实和虚拟现实之间的界线很模糊。此流派经常使用人脑和电脑的直接连接。<br>赛博朋克经常以隐喻义出现，反映了人们对于大公司企业、政府腐败及社会疏离现象的担忧。一些赛博朋克作家试图通过他们的作品，警示人类社会依照如今的趋势将来可能的样子。因此，赛博朋克作品写作的目的是号召人们来改变社会。通常以骄傲，目空一切的态度看待在城市中犄角旮旯生存的过街老鼠为展开。</p>
 </div></div>


<div class="note-large notel-blue"><div class="notel-title"><p>影响评价</p>
</div><div class="notel-content"><p>科技是科幻的底座……在赛博朋克的世界，科技的迅猛究竟带来的是”稳稳的幸福”，还是会导致”妥妥的不幸”。赛博朋克的世界观所揭示的诸多神奇与矛盾，让人在科技之余反思伦理，在物质之外发现精神，在机器之外寻找人性，在岁月之外确认文明。换句话说，它的最大价值或许就在于，让我们在通往未来的时候可以尽早知晓，哪些是康庄大道，哪些是末路歧途  。（人民日报 评）<br>一切看似天马行空的文艺作品，都是在反映创作者当下所处的“现代”。如今身处的，就是一个赛博朋克的时代。这个看似繁荣的空前盛世，其实一直潜藏着人性的深渊，向下滑落的大门，一直为所有人免费敞开。而且不同于可以随意通过“城头变幻大王旗”进行王朝循环的农业时代，工业革命开启的现代科技文明，因为消耗了太多的不可再生能源，已经无法在短期内重新从低技术状态“重启”了。人民从出生起就享受着的、看似天经地义的现代生活，其实是一个高度复杂、脆弱的“纸牌屋”。赛博朋克作品中刺眼的灰暗未来，其实是创作者们对当下读者送来的警示箴言。但希望依然存在，正如人类一步一步凭借理性的认知走到今天的历史所证明的，人性的深渊之中，同样存在着“天使”，存在着打破束缚、超越自我、追求至高自由的渴望与梦想。如何克服本性的束缚、放下固有的思维定式、打破如今诅咒一般越来越“现实主义”的赛博朋克幻想，开拓全新的未来可能，才是当下人类最迫切需要进行的“思维革命”  。（中国科学技术馆 评）</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>相关作品</p>
</div><div class="notel-content"><p>菲利普·K·迪克（1928.12.16—1982.3.2）的作品成为了赛博朋克类型作品的前身。<br>“我所关心的主要问题是：何谓真实？我甚至质疑这个宇宙，我想知道是否它是真实的，我想知道是否我们都是真实的！”迪克常将笔下人物放进虚构的世界，一个被他质疑其构建和制度的世界。这些故事看似荒谬的幻想，角色们发现他们每天生活的世界是个假像，产生自外部的实质世界。所有他的著作都建立在“没有一个单独、客观存在的真实”这个基本假设。<br>菲利普·迪克笔下是一个衰败的世界，是文明的深深没落，是科技的重重沦陷。狄克生前没有得到世人认可，但在他死后，他的书不停地再版。他被惊呼为我们时代的伟大作家和前卫作家，也可能是最让人吃惊和震撼的作家。有人用他的名字设立了科幻奖。他的小说频频被翻拍成电影，除了科幻片史上有名的《银翼杀手》，还有《少数派报告》《全面回忆》《记忆裂痕》《强殖入侵》等。<br>威廉·吉布森（William Gibson）的“蔓生三部曲”<br>威廉·吉布森由于他的小说《神经漫游者》（1984年）而通常被人们与赛博朋克联系起来。他注重风格、角色成长以及传统科幻小说的氛围，神经浪游者曾被授予雨果奖及星云奖。根据术语档案（Jargon File），吉布森对计算机和当今黑客文化认识不深，使他对计算机和黑客在将来的角色有着特别的推测，而这种看法对黑客们来说天真得令人愤怒，却又令他们感到非常刺激。<br>其他著名的赛博朋克作家包括布鲁斯·斯特林（Bruce Sterling）、鲁迪·鲁克（Rudy Rucker）、帕特·卡蒂甘（Pat Cadigan）、杰夫·努恩（Jeff Noon）以及尼尔·斯蒂芬森（Neal Stephenson）。值得一提的是斯蒂芬森，他被认为是后赛博朋克（postcyberpunk）的代表，尽管大多数人认为这个区分很没必要。<br>雷蒙德·钱德勒（Raymond Chandler）因他荒凉的笔触、愤世嫉俗的世界观和残断的文字，强烈地影响了此流派的作者。赛博朋克的世界是一个反乌托邦的、黑色电影（film noir）的绝望世界。菲利普·K·迪克对此流派也有很大影响。他的作品主题包括社会荒颓、人工智能、偏执狂以及现实及某种虚拟现实间模糊的界限。<br>弗诺·文奇，作为赛博朋克流派中活跃的作家，弗诺·文奇拥有极高的声誉，在硬科幻小说写作方面很有一手。他的小说逻辑严密，情节紧凑，展示出科技的奇妙之处，尤以细节的缔造和令人惊叹的预见力著称。大量细致又经得起推敲的描述让虚构出的“异世界”及生活其中的种族几可乱真。 和他本身的科学素养大有关系，弗诺·文奇本身就是数学家和计算机专家。1981年的《真名实姓》使他声名大噪，1992年的《深渊上的火》获得雨果奖，2000年又以该书前传《天渊》击败《哈利·波特与阿兹卡班的囚徒》，再获雨果奖。<br>后期的赛博朋克的电影有雷德利·斯科特1982年所执导的电影《银翼杀手》，是几部菲利普·狄克的著作所改编的电影之一；《捍卫机密》（1995年）和《新玫瑰旅馆》（1998年）。两部电影基于威廉·吉布森的短篇故事，然而票房和评价方面皆不理想；《黑客帝国》系列（1999年-2003年）则是少数非常成功的赛博朋克电影。近期加入此类别的电影制作包含了原本1982年电影的续作《银翼杀手2049》（2017年）、《升级》（2017年）、改编自1990年代日本漫画《铳梦》的《阿丽塔：战斗天使》（2019年），以及2018年Netflix的影集《副本：义体置换》。<br>电子游戏、桌面游戏和桌上角色扮演游戏，例如《赛博朋克2077》和《暗影狂奔》系列，其故事情节经常受赛博朋克文学和电影强烈的影响。90年代初开始，一些时尚和音乐的趋势也被称为赛博朋克。赛博朋克也在日本动画和日本漫画中占据重要位置：《阿基拉》《铳梦》《攻壳机动队》《玲音》《电脑线圈》《死亡代理人》《BLAME!》《心理测量者》《苹果核战记》等作品在当中是最为著名的。</p>
 </div></div>

]]></content>
      <tags>
        <tag>科普  文化  赛博朋克</tag>
      </tags>
  </entry>
  <entry>
    <title>银河系vs仙女座星系</title>
    <url>/2023/05/22/%E9%93%B6%E6%B2%B3%E7%B3%BBvs%E4%BB%99%E5%A5%B3%E5%BA%A7%E6%98%9F%E7%B3%BB/</url>
    <content><![CDATA[<div class="note-large notel-blue"><div class="notel-title"><p>知识科普</p>
</div><div class="notel-content"><p>银河系与仙女系相撞？<br>在天文望远镜被发明以来，近代天文学得到了突破性的发展，人们能够真切观察到神秘且遥远的宇宙，能深入观测到每一个天体的变化与无穷。 随着天文设备的不断革新，天文学家们在发现了更多的宇宙真实的同时，也察觉到了一些即将发生在未来的灾难——本星系群的仙女座星系将在未来与银河系发生大碰撞。</p>
 </div></div>
<div class="note-large notel-blue"><div class="notel-title"><p>仙女座星系</p>
</div><div class="notel-content"><p>仙女座星系早在18世纪时期就已经被天文学家们察觉到了，伊曼努埃尔·康德甚至在当时就认为这或许是一个巨大的恒星系统，当然，恒星系统不仅仅是指类似于太阳系这样的行星围绕恒星旋转的现象，也指星团或者星系，即一些恒星受到引力约束而互相环绕的系统。 然而由于当时技术并不算发达，这位天文学家的说法一直都没有得到确切的证据，直到上个世纪20年代，另外一位天文学家发现了在仙女座星系的外区检验并且确认了其他属于该星系的恒星，才使得这一说法被证实。 在2012年以前，同样是因为技术上的不足，天文学家们只能凭借着“多普勒效应”，即观测星系恒星光谱线的变化，来分析出仙女座星系在人类观察者视线方向的速度，可我们很难测量出仙女座星系与视线方向垂直的运动速度。</p>
 </div></div>
<div class="note-large notel-blue"><div class="notel-title"><p>多普勒效应</p>
</div><div class="notel-content"><p>根据“多普勒效应”，天文学家们已经得知了仙女座星系在当时正朝着地球以每秒钟120公里的径向速度靠近，可因为缺乏其他的相关数据，天文学家们还无法得知它是否会与银河系发生碰撞。 到了2012年，天文学家们利用哈勃空间望远镜，以其优于地面天文台的强大功能分析了仙女座星系在2010年到2012年两年时间的运动状态，发现它相比银河系而言，切向速度或侧向速度相对来说比切向的接近速度要小。<br>这两个星系的横向速度都比天文学家们之前预测得要小很多，因此他们认为，银河系与仙女座星系或许将在39亿年左右的时间点发生碰撞。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>仙女座星系与银河系</p>
</div><div class="notel-content"><p>然而在2019年2月26日，美国国家地理却表示，仙女座星系正以每秒300千米的速度奔向银河系，两者发生碰撞的时间并不在39亿年左右，而是会向后推迟6亿年的时间，换句话说，这场灾难大概会发生在45亿年后。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>地球会受到影响吗？</p>
</div><div class="notel-content"><p>假设我们不考虑其他的复杂影响，只单单猜想当银河系与仙女座星系发生碰撞，地球会变得什么样子呢？能否幸免于难呢？</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>计算机模拟撞击过程</p>
</div><div class="notel-content"><p>可能很多人会认为，两个巨大的星系互相撞击，必然会导致无数的恒星相碰撞，进而造成巨量的恒星因为撞击而死亡，同时恒星之间的相撞也会爆发出强烈的辐射和能量等，届时地球周围的环境将会更加恶劣和危险。 若是不幸运的话，太阳系可能也会被“不速之客”影响，地球也将会不复存在。 但是事实却并非如此，因为不管是银河系还是仙女座星系，这两个星系的实际恒星密度都不高，恒星之间的距离非常遥远。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>哈勃望远镜拍摄的银河系内球状星团M15</p>
</div><div class="notel-content"><p>虽然宇宙中各大天体的体积对于人类而言都格外庞大，但是我们需要知道的是，恒星与恒星之间距离单位是以光年为起步的，太阳距离最近的恒星都隔着4.22光年，更别说其他恒星了。 也因此，我国的天文学家苟利军表示，银河系与仙女座星系的相撞对地球的影响非常小。 更有天文学家们针对两者的撞击进行了计算，发现虽然银河系与仙女座星系未来必然会发生撞击，以及融合成一个更大的星系，但两个星系的恒星相撞概率几乎为零，极其渺茫。 这意味着绝大多数的恒星其实都是互相从空隙中穿过，太阳系极大可能并不会受到太多的影响，甚至那时候如果还有人类存在，我们将会从天空中看到史无前例的绚丽“灯光秀”。 尽管从上面来看，地球基本上能够在两大星系的悍然撞击合并下幸免，但是影响地球演化之路的并非仅仅只有星系相撞这一种。 我们需要知道的是，地球本身是非常脆弱的，它之所以能在几十亿年里一直处在太阳的宜居带之中，并且源源不断的在各种各样的灭绝与灾难中重回新生，推动数次大灭绝下残存的物种再次壮大的原因其实是多种因素共同维护而成的。 地球如今的繁荣昌盛，离不开太阳系外的日光层对宇宙辐射的防护，离不开木星强大的引力下对误闯的陨石、小行星等外来物的防线，也离不开地球外几十亿年来默默抵挡了大量危险陨石的月球等等。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>月球表面</p>
</div><div class="notel-content"><p>如果有一颗巨大的陨石在巧合之下突破了木星的引力牵制，也跨过了月球的第二重防线，直直轰击在地球上，那么引起了第五次大灭绝的惨状将再次发生在地球，甚至若是威力再巨大一些，地球也将会就此沉寂，成为如同火星一样的荒星。 就算我们不考虑陨石坠落等意外现象，太阳作为一颗寿命为100亿年的黄矮星，如今已经走过了它一半的生命之旅，大概有45.7亿年的岁数了。 这也意味着，太阳将会在50亿年左右的时间耗尽内核处的氢元素，核聚变开始燃烧更高质量的元素，太阳也会向外膨胀，直到外层蔓延至地球甚至是火星所在的位置。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>太阳未来</p>
</div><div class="notel-content"><p>虽然在这里看来，太阳死亡的时间远比银河系与仙女座星系碰撞的时间要晚，但是随着太阳的不断燃烧，其光度大概每10亿年就会增加10%左右，同时温度也在持续缓慢地上升。 如果按照这样的增长速度，地球根本等不到什么太阳变成红巨星，直接将会在10亿年后被过高的温度烤炙地表，导致地表温度过高，液态水也无法再存在，可想而知，以液态水为生存必备条件之一的地球生命也将会走向灭绝。 当然，在10亿年以后生命无法存活的时候，如果人类还存在于地球上，那么我们必然已经想出了应对一切宇宙变化的解决办法。 毕竟人类的科技发展速度是众所周知的迅速，尽管在如今身处时代的洪流中的我们可能无法察觉到科技的变化速度，但是纵观人类历史，我们的科技飞速发展也才过去了短短几百年，却已经日新月异，这是在过去几十年的人们无法想到的盛景。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>人类未来</p>
</div><div class="notel-content"><p>到了未来，人类可能已经发展出了能在地下生存、利用各种元素制造水源，并且模拟水循环系统，能自行“创造”出一方小世界。 而在太阳即将迎来死亡，地球彻底终结之前，人类必然已经制造出了能星际航行的宇宙飞船，前往另外一颗更加适宜的类地行星，携带着地球本来的物种样本，在遥远的世界里发展出了第二颗“地球”。<br>我们将无惧宇宙，将明白宇宙的一切发展规律，我们会长久地生存下去，直到宇宙熵增到终结。</p>
 </div></div>
]]></content>
      <tags>
        <tag>科普  宇宙</tag>
      </tags>
  </entry>
</search>
